import groovy.json.JsonSlurper

def authCookie
def dcosUrl = "https://admin.sgcto-int.stratio.com"
def jobId = "test-sync-jenkins"
def runId

node('jenkins-slave-mvn-jdk11') {
    stage ("Login to DC/OS") {
        withCredentials([[$class : 'UsernamePasswordMultiBinding',
                          credentialsId   : "jenkinsDcos_dev",
                          usernameVariable: 'CICDCD_SSO_USER_ID',
                          passwordVariable: 'CICDCD_SSO_USER_PASSWORD']]) {
                              
            withEnv(["CICDCD_SSO_URL=${dcosUrl}/login"]) {
                configFileProvider([configFile(fileId: 'sso_login', variable: 'SSO_LOGIN_FILE')]) {
                    authCookie = sh script: "bash '${SSO_LOGIN_FILE}'", returnStdout: true
                }
            }
        }
        
        if (!authCookie){
            error "[ERROR] Could not authenticate to $dcosUrl"
        }
    }
    
    stage ("Run DC/OS job") {
        def jobCommand = "curl -k -s -X POST --cookie '$authCookie' $dcosUrl/service/metronome/v1/jobs/${jobId}/runs"
        def jobResponse = sh script: "$jobCommand", returnStdout: true

        def jobResponseJson = new JsonSlurper().parseText(jobResponse)
        runId = jobResponseJson.id
        println "[INFO] Run id: $runId"
        
        if (!runId){
            error "[ERROR] Could not be started the DC/OS job $jobId"
        }
    }
    
    stage ("Check DC/OS job status") {
        def jobFinished = false

        while (!jobFinished){
        
            def jobPollCommand = "curl -k -s --cookie '$authCookie' $dcosUrl/service/metronome/v1/jobs/${jobId}?embed=history"
            def jobStatusResult = sh script: "$jobPollCommand", returnStdout: true
            def jobStatusResponseJson = readJSON text: "$jobStatusResult"

            if (jobStatusResponseJson.history.failedFinishedRuns.any{ it.id == "$runId" }){
                error "[ERROR] DC/OS job finished with failed status"
            } else if (jobStatusResponseJson.history.successfulFinishedRuns.any{ it.id == "$runId" }){
                jobFinished = true
                println "[INFO] DC/OS job finished with successful status"
            } else {
                println "[INFO] DC/OS job still running"
                sleep 5
            }
        }
    }
}
